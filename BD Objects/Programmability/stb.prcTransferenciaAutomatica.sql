create PROCEDURE stb.prcTransferenciaAutomatica
---2.2.12.	Transferência Automática
AS

DECLARE @DATA_AUX				DATETIME

SELECT @DATA_AUX = GETDATE()

--SET @DATA_AUX = '2017-07-30 00:00:00'

DECLARE @MSG					VARCHAR(MAX)

IF object_id('tempdb..#TBL_TRANSF_AUTOMATICA') IS NOT NULL 
	DROP TABLE #TBL_TRANSF_AUTOMATICA

CREATE TABLE #TBL_TRANSF_AUTOMATICA 
(
	PK_ID					BIGINT, 
	DT_AQUISICAO			DATETIME,
	DT_TRANSFERENCIA		DATETIME,
	DT_FIM_PROPRIEDADE		DATETIME,
	DT_FIM_ALIENACAO		DATETIME, 
	DT_FIM_ARRENDAMENTO		DATETIME,
	ID_PESSOA				INT,
	ID_ANIMAL				INT,
	ID_VENDEDOR				INT,
	PK_ID_TRANSF_ANTERIOR	BIGINT,
	TIPO_TRANSF				CHAR(1),
	ALIENADO				TINYINT			
)


IF object_id('tempdb..#TBL_TRANSF_AUTOMATICA_AUX') IS NOT NULL 
	DROP TABLE #TBL_TRANSF_AUTOMATICA_AUX

CREATE TABLE #TBL_TRANSF_AUTOMATICA_AUX
(
	PK_ID					BIGINT, 
	PK_ID_TRANSF_ANTERIOR	BIGINT,
	DT_AQUISICAO			DATETIME,
	DT_TRANSFERENCIA		DATETIME,
	DT_FIM_PROPRIEDADE		DATETIME,
	DT_FIM_ALIENACAO		DATETIME, 
	DT_FIM_ARRENDAMENTO		DATETIME,
	ID_PESSOA				INT,
	ID_ANIMAL				INT,
	ID_VENDEDOR				INT,
	TIPO_TRANSF				CHAR(1),
	ALIENADO				TINYINT			
)

IF object_id('tempdb..#TBL_TRANSF_AUTOMATICA_ANT') IS NOT NULL 
	DROP TABLE #TBL_TRANSF_AUTOMATICA_ANT

CREATE TABLE #TBL_TRANSF_AUTOMATICA_ANT
(
	PK_ID					BIGINT, 
	PK_ID_TRANSF_ANTERIOR	BIGINT,
	DT_AQUISICAO			DATETIME,
	DT_TRANSFERENCIA		DATETIME,
	DT_FIM_PROPRIEDADE		DATETIME,
	DT_FIM_ALIENACAO		DATETIME, 
	DT_FIM_ARRENDAMENTO		DATETIME,
	ID_PESSOA				INT,
	ID_ANIMAL				INT,
	ID_VENDEDOR				INT,
	TIPO_TRANSF				CHAR(1),
	ALIENADO				TINYINT			
)


--Será criado um robô que ficará verificando as transferências de Arrendamento 
--que contiverem data de vencimento igual à data atual e que ainda não foram quitadas. 
--As transferências que entrarem nestas condições terão a data de quitação preenchida com a data atual e será gerada uma nova transferência do tipo “Transferência” onde o vendedor será o comprador atual e o comprador será o vendedor atual. Estas transferências terão as resenhas e os outros dados copiados para a nova transferência e será gerado um novo certificado.

--BEGIN

	-----LOCALIZA AS TRANSFERÊNCIAS DE ARRENDAMENTO QUE DEVERÃO SER FECHADAS

	INSERT INTO #TBL_TRANSF_AUTOMATICA
	(
		PK_ID,
		DT_AQUISICAO,
		DT_TRANSFERENCIA,
		DT_FIM_PROPRIEDADE,
		DT_FIM_ALIENACAO,
		DT_FIM_ARRENDAMENTO,
		ID_PESSOA,
		ID_ANIMAL,
		TIPO_TRANSF,
		ALIENADO
	)
	SELECT 
		PK_ID,
		DT_AQUISICAO,
		DT_TRANSFERENCIA,
		DT_FIM_PROPRIEDADE,
		DT_FIM_ALIENACAO,
		DT_FIM_ARRENDAMENTO,
		ID_PESSOA,
		ID_ANIMAL,
		TIPO_TRANSF,
		ALIENADO
	FROM
		HISTORICO_PROPRIEDADE HP
	WHERE
		HP.TIPO_TRANSF = 1						----tipo de transferência de arrendamento
		AND HP.DT_FIM_PROPRIEDADE IS NULL		----ainda está com o proprietário atual
		AND HP.DT_FIM_ARRENDAMENTO IS NOT NULL	----possui uma data programada para o fim do arrendamento
		AND HP.dt_cancela_alienacao IS NULL		----não permite arrendamento cancelado
		AND (DATEDIFF(DAY,HP.DT_FIM_ARRENDAMENTO,GETDATE()) > 0)	----a diferença entre a data de fim de ----arrendamento e a data atual
	ORDER BY HP.ID_ANIMAL, HP.DT_AQUISICAO 
																	

	------LOCALIZAR A TRANSFERÊNCIA ANTERIOR
	INSERT INTO #TBL_TRANSF_AUTOMATICA_AUX
	(
		DT_AQUISICAO,
		PK_ID,
		PK_ID_TRANSF_ANTERIOR,
		DT_TRANSFERENCIA,
		DT_FIM_PROPRIEDADE,
		DT_FIM_ALIENACAO,
		DT_FIM_ARRENDAMENTO,
		ID_PESSOA,
		ID_ANIMAL,
		TIPO_TRANSF,
		ALIENADO
	)
	SELECT 
		MAX(HP.DT_AQUISICAO) AS DT_AQUISICAO, 
		TA.PK_ID,
		HP.PK_ID,
		HP.DT_TRANSFERENCIA,
		HP.DT_FIM_PROPRIEDADE,
		HP.DT_FIM_ALIENACAO,
		HP.DT_FIM_ARRENDAMENTO,
		TA.ID_PESSOA,
		HP.ID_ANIMAL,
		HP.TIPO_TRANSF,
		HP.ALIENADO
	FROM
		#TBL_TRANSF_AUTOMATICA TA
		INNER JOIN HISTORICO_PROPRIEDADE HP ON 
			HP.ID_ANIMAL = TA.ID_ANIMAL AND 
			HP.ID_PESSOA <> TA.ID_PESSOA AND 
			HP.DT_AQUISICAO < TA.DT_AQUISICAO 
	WHERE
		ISNULL(HP.TIPO_TRANSF,0) <> 2						----tipo de transferência de arrendamento
		AND HP.DT_FIM_PROPRIEDADE IS NOT NULL			----ainda está com o proprietário atual
		AND HP.DT_FIM_ARRENDAMENTO IS NULL			----possui uma data programada para o fim do arrendamento
		AND HP.DT_CANCELA_ALIENACAO IS NULL			----não permite arrendamento cancelado
		AND HP.DT_AQUISICAO < TA.DT_AQUISICAO 		----a diferença entre a data de fim de ----arrendamento e a data atual
		AND HP.PK_ID <> TA.PK_ID 
		AND HP.ID_PESSOA <> TA.ID_PESSOA 
	GROUP BY 
		TA.PK_ID,
		HP.PK_ID,
		HP.DT_TRANSFERENCIA,
		HP.DT_FIM_PROPRIEDADE,
		HP.DT_FIM_ALIENACAO,
		HP.DT_FIM_ARRENDAMENTO,
		TA.ID_PESSOA,
		HP.ID_ANIMAL,
		HP.TIPO_TRANSF,
		HP.ALIENADO


	------LOCALIZAR A TRANSFERÊNCIA ANTERIOR
	INSERT INTO #TBL_TRANSF_AUTOMATICA_ANT
	(
		DT_AQUISICAO,
		PK_ID,
		PK_ID_TRANSF_ANTERIOR
	)
	SELECT 
		MAX(HP.DT_AQUISICAO)	AS DT_AQUISICAO, 
		TA.PK_ID, 
		MAX(HP.PK_ID_TRANSF_ANTERIOR)	AS PK_ID_ANTERIOR
	FROM
		#TBL_TRANSF_AUTOMATICA TA
		INNER JOIN #TBL_TRANSF_AUTOMATICA_AUX HP ON 
			HP.ID_ANIMAL = TA.ID_ANIMAL AND 
			--HP.ID_PESSOA <> TA.ID_PESSOA AND 
			HP.DT_AQUISICAO < TA.DT_AQUISICAO 
	WHERE
		--HP.TIPO_TRANSF = 1							----tipo de transferência de arrendamento
		HP.DT_FIM_PROPRIEDADE IS NOT NULL				----ainda está com o proprietário atual
		AND HP.DT_FIM_ARRENDAMENTO IS NULL				----possui uma data programada para o fim do arrendamento
		--AND HP.DT_CANCELA_ALIENACAO IS NULL			----não permite arrendamento cancelado
		AND HP.DT_AQUISICAO < TA.DT_AQUISICAO 			----a diferença entre a data de fim de ----arrendamento e a data atual
		AND HP.PK_ID_TRANSF_ANTERIOR <> TA.PK_ID 
		--AND HP.ID_PESSOA = TA.ID_PESSOA				
	GROUP BY 
		TA.PK_ID

	UPDATE TANT
	SET 
		DT_AQUISICAO			= TAUX.DT_AQUISICAO,
		PK_ID					= TAUX.PK_ID,
		PK_ID_TRANSF_ANTERIOR	= TAUX.PK_ID_TRANSF_ANTERIOR,
		DT_TRANSFERENCIA		= TAUX.DT_TRANSFERENCIA,
		DT_FIM_PROPRIEDADE		= TAUX.DT_FIM_PROPRIEDADE,
		DT_FIM_ALIENACAO		= TAUX.DT_FIM_ALIENACAO,
		DT_FIM_ARRENDAMENTO		= TAUX.DT_FIM_ARRENDAMENTO,
		ID_PESSOA				= HP.ID_PESSOA,
		ID_ANIMAL				= TAUX.ID_ANIMAL,
		TIPO_TRANSF				= TAUX.TIPO_TRANSF,
		ALIENADO				= TAUX.ALIENADO,
		ID_VENDEDOR				= TAUX.ID_PESSOA 
	FROM 
		#TBL_TRANSF_AUTOMATICA_ANT TANT 
		INNER JOIN #TBL_TRANSF_AUTOMATICA_AUX TAUX ON 
			TANT.PK_ID					= TAUX.PK_ID AND 
			TANT.PK_ID_TRANSF_ANTERIOR	= TAUX.PK_ID_TRANSF_ANTERIOR 
		INNER JOIN HISTORICO_PROPRIEDADE HP ON 
			HP.PK_ID = TANT.PK_ID_TRANSF_ANTERIOR 


BEGIN TRAN THISTORICO

	UPDATE HP
	SET
		DT_FIM_PROPRIEDADE = TANT.DT_FIM_ARRENDAMENTO,
		anotacao_transferencia = 'FIM DE ARRENDAMENTO',
		dt_alteracao = GETDATE(),
		usuario = 'Sistema'
	FROM HISTORICO_PROPRIEDADE HP
	INNER JOIN #TBL_TRANSF_AUTOMATICA_ANT TANT ON
		TANT.PK_ID = HP.PK_ID 


	IF @@ERROR <> 0 
		BEGIN 
			ROLLBACK TRANSACTION 
			SELECT @MSG = 'Não foi possível concluir o retorno do arrendamento - Favor tentar novamente'
			RAISERROR (@MSG,16,1) 
			RETURN -1 
		END 


	INSERT INTO HISTORICO_PROPRIEDADE
	(
		ID_ANIMAL,
		DT_AQUISICAO,
		ID_PESSOA,
		DT_TRANSFERENCIA,
		DT_FIM_PROPRIEDADE,
		DT_EMISSAO_TRANSFERENCIA,
		ANOTACAO_TRANSFERENCIA,
		DT_INCLUSAO,
		DT_ALTERACAO,
		USUARIO,
		DT_IMP_ETIQUETA,
		TIPO_TRANSF
	)

	SELECT
		ANT.ID_ANIMAL,
		DATEADD(DD, 1,ANT.DT_FIM_ARRENDAMENTO),
		ANT.ID_VENDEDOR,
		GETDATE(),
		NULL,
		GETDATE(),
		'RETORNO AUTOMATICO APOS FIM DE ARRENDAMENTO',
		GETDATE(),
		GETDATE(),
		'SISTEMA',
		NULL,
		0
	FROM #TBL_TRANSF_AUTOMATICA_ANT ANT
		
COMMIT TRAN THISTORICO 

--ROLLBACK TRAN THISTORICO 
